basePath: /api
definitions:
  auth.LoginRequest:
    properties:
      Password:
        type: string
      Username:
        type: string
    type: object
  auth.RegisterRequest:
    properties:
      Email:
        type: string
      Password:
        type: string
      Username:
        type: string
    type: object
  auth.UserFindRequest:
    properties:
      user_id:
        type: string
    type: object
  httpresponse.ErrorResponse:
    properties:
      ErrorDescription:
        type: string
    type: object
  user.User:
    properties:
      Username:
        type: string
      avatar_url:
        type: string
      coins:
        type: integer
      created_at:
        type: string
      current_game_key:
        type: string
      email:
        type: string
      id:
        type: string
      passwordHash:
        type: string
      passwordSalt:
        type: string
      rating:
        type: integer
      social_links:
        additionalProperties:
          type: string
        type: object
      statistic:
        $ref: '#/definitions/user.UserStatistic'
      status:
        type: string
      updated_at:
        type: string
    type: object
  user.UserStatistic:
    properties:
      achievements:
        items:
          type: string
        type: array
      draws:
        type: integer
      losses:
        type: integer
      wins:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Документация API авторизации и пользователей
  version: "1.0"
paths:
  /getUserById:
    post:
      consumes:
      - application/json
      description: Возвращает пользователя по ID. Требуется авторизация (cookie sessionID).
      parameters:
      - description: ID пользователя для поиска
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth.UserFindRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpresponse.ErrorResponse'
        "405":
          description: Only POST method is allowed
          schema:
            type: string
      summary: Получение информации о пользователе
      tags:
      - user
  /login:
    post:
      consumes:
      - application/json
      description: Авторизует пользователя по логину и паролю, устанавливает cookie
        sessionID
      parameters:
      - description: Данные пользователя для входа
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpresponse.ErrorResponse'
      summary: Вход пользователя
      tags:
      - auth
  /logout:
    post:
      description: Удаляет сессию пользователя по cookie sessionID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.ErrorResponse'
      summary: Выход пользователя
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Создаёт нового пользователя и устанавливает cookie sessionID
      parameters:
      - description: Данные пользователя для регистрации
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpresponse.ErrorResponse'
      summary: Регистрация нового пользователя
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: cookie
    name: sessionID
    type: apiKey
swagger: "2.0"
